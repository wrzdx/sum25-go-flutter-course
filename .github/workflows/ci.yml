name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:
  pull_request:
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci.yml'

env:
  GO_VERSION: '1.24'
  FLUTTER_VERSION: '3.32.1'

jobs:
  # Lint and format check
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}

      - name: Cache Flutter packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            frontend/.dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('frontend/pubspec.lock') }}

      - name: Install Go dependencies
        working-directory: backend
        run: go mod download

      - name: Install Flutter dependencies
        working-directory: frontend
        run: flutter pub get

      - name: Lint Go code
        working-directory: backend
        run: |
          go vet ./...
          go fmt ./...
          # Check if code is formatted
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Go code is not formatted. Please run 'go fmt ./...'"
            exit 1
          fi

      - name: Lint Dart code
        working-directory: frontend
        run: |
          dart analyze
          dart format --set-exit-if-changed .

  # Backend tests
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.5
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}

      - name: Install dependencies
        working-directory: backend
        run: go mod download

      - name: Run unit tests
        working-directory: backend
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb?sslmode=disable
        run: |
          go test -v -race -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out

      - name: Run integration tests
        working-directory: backend
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb?sslmode=disable
        run: |
          if [ -d "./tests" ] && [ "$(ls -A ./tests)" ]; then
            echo "Running integration tests..."
            go test -v -tags=integration ./tests/...
          else
            echo "No integration tests found, skipping integration tests"
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage.out
          flags: backend

  # Frontend tests
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Cache Flutter packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            frontend/.dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('frontend/pubspec.lock') }}

      - name: Install dependencies
        working-directory: frontend
        run: flutter pub get

      - name: Run unit tests
        working-directory: frontend
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: frontend/coverage/lcov.info
          flags: frontend

  # Build applications
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [lint, backend-test, frontend-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}

      - name: Cache Flutter packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            frontend/.dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('frontend/pubspec.lock') }}

      - name: Install backend dependencies
        working-directory: backend
        run: go mod download

      - name: Install frontend dependencies
        working-directory: frontend
        run: flutter pub get

      - name: Build backend
        working-directory: backend
        run: |
          CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o bin/server cmd/server/main.go
          CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o bin/migrate cmd/migrate/main.go

      - name: Build frontend (web)
        working-directory: frontend
        run: flutter build web --release

      - name: Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-binaries
          path: backend/bin/

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-web
          path: frontend/build/web/

  